<Window x:Class="S1FileSync.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:S1FileSync"
        xmlns:views="clr-namespace:S1FileSync.Views"
        xmlns:model="clr-namespace:S1FileSync.ViewModels"
        xmlns:converters="clr-namespace:S1FileSync.Converters"
        mc:Ignorable="d"
        Title="File Synchronization"
        Width="1280" Height="720"
        MinWidth="600" MinHeight="400"
        MaxHeight="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}"
        MaxWidth="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}"
        d:DataContext="{d:DesignInstance Type=model:MainViewModel}"
        Icon="/Assets/app.ico"
        Opacity="0"
        d:Opacity="1">
    <Window.Resources>
        <ResourceDictionary>
            <Storyboard x:Key="SidebarExpandAnimation">
                <DoubleAnimation
                    Storyboard.TargetName="SidebarBorder"
                    Storyboard.TargetProperty="Width"
                    To="{x:Static model:MainViewModel.SidebarExpandedWidth}"
                    Duration="0:0:0.3">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation
                    Storyboard.TargetName="NavText"
                    Storyboard.TargetProperty="Opacity"
                    From="0" To="1"
                    Duration="0:0:0.2"
                    BeginTime="0:0:0.1"/>
            </Storyboard>

            <Storyboard x:Key="SidebarCollapseAnimation">
                <DoubleAnimation
                    Storyboard.TargetName="SidebarBorder"
                    Storyboard.TargetProperty="Width"
                    To="{x:Static model:MainViewModel.SidebarCollapsedWidth}"
                    Duration="0:0:0.3">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation
                    Storyboard.TargetName="NavText"
                    Storyboard.TargetProperty="Opacity"
                    To="0"
                    Duration="0:0:0.2"/>
            </Storyboard>

            <Style x:Key="NavButton" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid x:Name="NavButtonGrid" Background="Transparent">
                                <Border x:Name="NavButtonBorder"
                                        CornerRadius="8"
                                        Padding="16,12">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{x:Static model:MainViewModel.SidebarIconColumnWidth}"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter x:Name="Icon"
                                                          Grid.Column="0"
                                                          Content="{TemplateBinding Tag}"
                                                          HorizontalAlignment="Center"
                                                          VerticalAlignment="Center">
                                        </ContentPresenter>
                                        <TextBlock x:Name="NavButtonText"
                                                   Grid.Column="1"
                                                   Text="{TemplateBinding Content}"
                                                   Margin="12,0,0,0"
                                                   VerticalAlignment="Center"
                                                   Foreground="{DynamicResource SecondaryColor}"/>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="NavButtonBorder"
                                            Property="Background"
                                            Value="{DynamicResource PrimaryColor}"/>
                                    <Setter TargetName="NavButtonText"
                                            Property="Foreground"
                                            Value="{DynamicResource PrimaryButtonTextColor}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="NavButtonBorder"
                                            Property="Background"
                                            Value="{DynamicResource HoverColor}"/>
                                </MultiTrigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Resources>
                    <Style TargetType="Path">
                        <Setter Property="Stroke" Value="{DynamicResource SecondaryTextColor}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True">
                                <Setter Property="Stroke" Value="{DynamicResource PrimaryButtonTextColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="ThemeToggleButton" TargetType="ToggleButton">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="8"
                                    CornerRadius="4"
                                    Cursor="Hand">
                                <Grid>
                                    <!-- Sun Icon -->
                                    <Path x:Name="SunIcon"
                                          Width="24" Height="24"
                                          Visibility="Collapsed"
                                          StrokeThickness="2"
                                          StrokeLineJoin="Miter"
                                          StrokeStartLineCap="Round"
                                          Fill="{DynamicResource PrimaryTextColor}"
                                          Stroke="{DynamicResource PrimaryTextColor}"
                                          Data="m 12,1 v 2 m 0,18 v 2 M 4.22,4.22 5.64,5.64 m 12.72,12.72 1.42,1.42 M 1,12 h 2 m 18,0 h 2 M 4.22,19.78 5.64,18.36 M 18.36,5.64 19.78,4.22 M 12,6 c -3.3137085,0 -6,2.6862915 -6,6 0,3.313708 2.6862915,6 6,6 3.313708,0 6,-2.686292 6,-6 0,-3.3137085 -2.686292,-6 -6,-6 z">
                                    </Path>

                                    <!-- Moon Icon -->
                                    <Path x:Name="MoonIcon"
                                          Width="24" Height="24"
                                          Visibility="Collapsed"
                                          Fill="{DynamicResource PrimaryTextColor}"
                                          Stroke="{DynamicResource PrimaryTextColor}"
                                          Data="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z">
                                    </Path>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="SunIcon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                    <Setter TargetName="MoonIcon"
                                            Property="Visibility"
                                            Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="SunIcon"
                                            Property="Visibility"
                                            Value="Visible"/>
                                    <Setter TargetName="MoonIcon"
                                            Property="Visibility"
                                            Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="IconButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="4"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource PressedColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Top Menu -->
        <Menu Grid.Row="0" Grid.ColumnSpan="2"
              Style="{DynamicResource BaseMenuStyle}">
            <Menu.Resources>
                <Style TargetType="MenuItem" BasedOn="{StaticResource MainMenuItemStyle}">
                    <Style.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource SubMenuItemStyle}"/>
                    </Style.Resources>
                </Style>
            </Menu.Resources>

            <MenuItem Header="File">
                <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="Sync">
                <MenuItem Header="Start Synchronization"
                          Command="{Binding StartSyncCommand}"
                          IsEnabled="{Binding IsServiceRunning, Converter={StaticResource InverseBoolConverter}}"/>
                <MenuItem Header="Stop Synchronization"
                          Command="{Binding StopSyncCommand}"
                          IsEnabled="{Binding IsServiceRunning}"/>
                <Separator/>
                <MenuItem Header="Service Status">
                    <MenuItem Header="{Binding ServiceStatus}" IsEnabled="False"/>
                    <MenuItem Header="IPC Connection:" IsEnabled="False"/>
                    <MenuItem Header="{Binding IPCStatus}" IsEnabled="False"/>
                </MenuItem>
            </MenuItem>
        </Menu>

        <!-- Sidebar -->
        <Border x:Name="SidebarBorder"
                Grid.Row="1" Grid.Column="0"
                Width="{x:Static model:MainViewModel.SidebarExpandedWidth}"
                Background="{DynamicResource SidebarBackground}">
            <DockPanel>
                <Grid DockPanel.Dock="Top" Margin="16,16,16,32">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="ToggleSidebarButton"
                            Click="ToggleSidebarClick"
                            Style="{StaticResource IconButtonStyle}">
                        <Viewbox Width="24" Height="24" Stretch="Uniform">
                            <Canvas Width="21" Height="24">
                                <Path Stroke="{DynamicResource PrimaryTextColor}"
                                      StrokeThickness="2"
                                      StrokeStartLineCap="Round"
                                      Data="M3 12h18M3 6h18M3 18h18"/>
                            </Canvas>
                        </Viewbox>
                    </Button>

                    <TextBlock Grid.Column="1"
                               x:Name="NavText"
                               Text="FileSync"
                               Foreground="{DynamicResource PrimaryTextColor}"
                               FontSize="20"
                               FontWeight="SemiBold"
                               Margin="12,0"
                               VerticalAlignment="Center"/>

                    <ToggleButton Grid.Column="2"
                                  Style="{StaticResource ThemeToggleButton}"
                                  IsChecked="{Binding IsDarkTheme}"
                                  Click="ThemeToggleClick"/>
                </Grid>
                <StackPanel>
                    <RadioButton x:Name="SyncRadioButton"
                                 Style="{StaticResource NavButton}"
                                 Content="Synchronization"
                                 IsChecked="True"
                                 GroupName="Navigation">
                        <RadioButton.Tag>
                            <!-- Sync 아이콘 -->
                            <Viewbox Width="20" Height="20" Stretch="Uniform">
                                <Canvas Width="24" Height="24">
                                    <Path StrokeThickness="2"
                                          StrokeStartLineCap="Round"
                                          StrokeLineJoin="Round"
                                          Data="M21.5 2v6h-6M2.5 22v-6h6M2 12c0-4.97 4.03-9 9-9 2.39 0 4.68.94 6.37 2.63L21.5 8M2.5 16L6.63 19.37C8.32 21.06 10.61 22 13 22c4.97 0 9-4.03 9-9"/>
                                </Canvas>
                            </Viewbox>
                        </RadioButton.Tag>
                    </RadioButton>

                    <RadioButton x:Name="SettingsRadioButton"
                                 Style="{StaticResource NavButton}"
                                 Content="Settings"
                                 GroupName="Navigation">
                        <RadioButton.Tag>
                            <!-- Setting 아이콘 -->
                            <Viewbox Width="20" Height="20" Stretch="Uniform">
                                <Canvas Width="24" Height="24">
                                    <Path StrokeThickness="2"
                                          StrokeStartLineCap="Round"
                                          StrokeLineJoin="Round"
                                          Data="M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1Z" Cursor=""/>
                                </Canvas>
                            </Viewbox>
                        </RadioButton.Tag>
                    </RadioButton>
                </StackPanel>
            </DockPanel>
        </Border>

        <Grid Grid.Row="1" Grid.Column="1"
              Background="{DynamicResource MainBackground}">
            <ContentControl Margin="32">
                <ContentControl.Style>
                    <Style TargetType="ContentControl">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=SyncRadioButton, Path=IsChecked}" Value="True">
                                <Setter Property="Content" Value="{Binding MonitorView}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=SettingsRadioButton, Path=IsChecked}" Value="True">
                                <Setter Property="Content" Value="{Binding SettingsView}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </Grid>
    
    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation 
                        Storyboard.TargetProperty="Opacity"
                        From="0" To="1"
                        Duration="0:0:0.3">
                        <DoubleAnimation.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>                    
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
</Window>