<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BaseMenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource SidebarBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>
    <Style x:Key="BaseMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="{DynamicResource SidebarBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>
    <Style x:Key="MainMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource BaseMenuItemStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter ContentSource="Header"
                                              Margin="6,2" />
                            <Popup x:Name="Popup"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                   AllowsTransparency="True"
                                   Placement="Bottom"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Background="{DynamicResource SidebarBackground}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource SecondaryTextColor}">
                                    <ItemsPresenter/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource HoverColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SecondaryTextColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SubMenuItemStyle" TargetType="MenuItem" BasedOn="{StaticResource BaseMenuItemStyle}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            Padding="6">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                <ColumnDefinition Width="13" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              ContentSource="Header"
                                              Margin="6,0" />
                            <ContentPresenter x:Name="Shortcut"
                                              Grid.Column="1"
                                              ContentSource="InputGestureText"
                                              Margin="6,0" />
                            <Path x:Name="SubMenuPath"
                                  Grid.Column="2"
                                  Fill="{TemplateBinding Foreground}"
                                  Data="M0,0 L0,7 L4,3.5 Z"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Visibility="Collapsed" />
                            <Popup x:Name="Popup"
                                   Grid.Column="0"
                                   IsOpen="{TemplateBinding IsSubmenuOpen}"
                                   AllowsTransparency="True"
                                   Placement="Right"
                                   PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <Border Background="{DynamicResource SidebarBackground}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource BorderColor}">
                                    <ItemsPresenter Margin="2"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource HoverColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource SecondaryTextColor}" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="SubMenuPath"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SectionStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SidebarBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Margin" Value="0,0,0,24"/>
    </Style>
    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>
    <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>
    <Style x:Key="FormGroupStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>
    <Style x:Key="FormLabelTextStyle" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>
    <Style x:Key="BaseInputStyle">
        <Setter Property="Control.Height" Value="40"/>
        <Setter Property="Control.Padding" Value="12,8"/>
        <Setter Property="Control.Background" Value="{DynamicResource InputBackground}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource InputTextColor}"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseInputStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource BaseInputStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource BaseInputStyle}">

    </Style>
    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Width" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="ThumbBorder"
                            Background="{DynamicResource SecondaryTextColor}"
                            CornerRadius="5"
                            Opacity="0.5" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ThumbBorder" Property="Opacity" Value="0.8" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="ThumbBorder" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Width" Value="3" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="8">
                        <Border x:Name="TrackBorder"
                                Background="Transparent"
                                Width="8"
                                CornerRadius="0" />
                        <Track x:Name="PART_Track"
                               Width="8"
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                              Style="{StaticResource ScrollBarRepeatButtonStyle}"
                                              Opacity="0" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                              Style="{StaticResource ScrollBarRepeatButtonStyle}"
                                              Opacity="0" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="TrackBorder" Property="Background" Value="{DynamicResource HoverColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CustomScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Style="{StaticResource CustomScrollBarStyle}"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>